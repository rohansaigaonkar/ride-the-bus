{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rohan/Documents/RTB/ride-the-bus/src/components/Game.js\";\nimport React, { Component } from 'react';\nimport FetchCard from \"./FetchCard\";\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.callAPI = async () => {\n      const url = 'https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1';\n      const response = await fetch(url);\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.state = {\n      loading: true,\n      deckId: null,\n      response: null\n    };\n  }\n\n  async componentDidMount() {\n    const deck = await response.json();\n    this.callAPI().then(response => this.setState({\n      response: res\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 39\n      }, this) : /*#__PURE__*/_jsxDEV(FetchCard, {\n        deckId: this.state.deckId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 59\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/rohan/Documents/RTB/ride-the-bus/src/components/Game.js"],"names":["React","Component","FetchCard","Game","constructor","props","callAPI","url","response","fetch","body","json","status","Error","message","state","loading","deckId","componentDidMount","deck","then","setState","res","catch","err","console","log","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AACzBG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAkBnBC,OAlBmB,GAkBT,YAAY;AAClB,YAAMC,GAAG,GAAG,+DAAZ;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,UAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AACzB,cAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACH;;AACD,aAAOJ,IAAP;AACH,KA3BkB;;AAEf,SAAKK,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,IADA;AAETC,MAAAA,MAAM,EAAE,IAFC;AAGTT,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAKH;;AAED,QAAMU,iBAAN,GAA0B;AACtB,UAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACG,IAAT,EAAnB;AAEA,SAAKL,OAAL,GACKc,IADL,CACUZ,QAAQ,IAAI,KAAKa,QAAL,CAAc;AAC5Bb,MAAAA,QAAQ,EAAEc;AADkB,KAAd,CADtB,EAGQC,KAHR,CAGcC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHrB;AAIH;;AAcDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,gBACK,KAAKZ,KAAL,CAAWC,OAAX,gBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAArB,gBAAyC,QAAC,SAAD;AAAW,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE;AAA9B;AAAA;AAAA;AAAA;AAAA;AAD9C;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AArCwB;;AAwC7B,eAAed,IAAf","sourcesContent":["import React, {Component} from 'react';\nimport FetchCard from \"./FetchCard\";\n\nclass Game extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            deckId: null,\n            response: null\n        }\n    }\n\n    async componentDidMount() {\n        const deck = await response.json()\n\n        this.callAPI()\n            .then(response => this.setState({\n                response: res\n            })).catch(err => console.log(err))\n    }\n\n    callAPI = async () => {\n        const url = 'https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1'\n        const response = await fetch(url)\n        const body = await response.json()\n\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n        return body;\n    }\n\n\n    render() {\n        return (\n            <div>\n                {this.state.loading ? <p>loading...</p> : <FetchCard deckId={this.state.deckId}/>}\n            </div>\n        );\n    }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}