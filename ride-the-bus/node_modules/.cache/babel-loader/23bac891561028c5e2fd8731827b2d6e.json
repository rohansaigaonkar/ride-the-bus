{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rohan/Documents/RTB/ride-the-bus/src/components/FetchCard.js\";\nimport React, { Component } from 'react';\n/**\n * This component handles the drawing a new card. It is responsible which step the user is on\n * As well as checking if their guess was correct.\n *\n * @param drawCard\n * @returns {JSX.Element}\n * @constructor\n */\n\nclass FetchCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchCard = async () => {\n      const url = `https://deckofcardsapi.com/api/deck/${this.props.deckId}/draw?count=1`;\n      const response = await fetch(url);\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n      /** Logs the response */\n\n\n      console.log(body);\n      return body;\n    };\n\n    const deckId = this.props;\n    this.state = {\n      step: 0,\n      loading: true\n    };\n    const handleDraw = this.handleDraw.bind();\n  }\n\n  handleDraw() {\n    this.fetchCard().then;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default FetchCard;","map":{"version":3,"sources":["/Users/rohan/Documents/RTB/ride-the-bus/src/components/FetchCard.js"],"names":["React","Component","FetchCard","constructor","props","fetchCard","url","deckId","response","fetch","body","json","status","Error","message","console","log","state","step","loading","handleDraw","bind","then","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAC9BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAenBC,SAfmB,GAeP,YAAY;AACpB,YAAMC,GAAG,GAAI,uCAAsC,KAAKF,KAAL,CAAWG,MAAO,eAArE;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,CAA5B;AACA,YAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,UAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AACzB,cAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACH;AAED;;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,aAAOA,IAAP;AACH,KA3BkB;;AAEf,UAAMH,MAAM,GAAG,KAAKH,KAApB;AACA,SAAKa,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,CADG;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAKA,UAAMC,UAAU,GAAG,KAAKA,UAAL,CAAgBC,IAAhB,EAAnB;AACH;;AAEDD,EAAAA,UAAU,GAAG;AACT,SAAKf,SAAL,GACKiB,IADL;AAEH;;AAeDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AApC6B;;AAuClC,eAAerB,SAAf","sourcesContent":["import React, {Component} from 'react';\n\n/**\n * This component handles the drawing a new card. It is responsible which step the user is on\n * As well as checking if their guess was correct.\n *\n * @param drawCard\n * @returns {JSX.Element}\n * @constructor\n */\nclass FetchCard extends Component {\n    constructor(props) {\n        super(props)\n        const deckId = this.props\n        this.state = {\n            step: 0,\n            loading: true,\n        }\n\n        const handleDraw = this.handleDraw.bind()\n    }\n\n    handleDraw() {\n        this.fetchCard()\n            .then\n    }\n    fetchCard = async () => {\n        const url = `https://deckofcardsapi.com/api/deck/${this.props.deckId}/draw?count=1`\n        const response = await fetch(url)\n        const body = await response.json()\n\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n\n        /** Logs the response */\n        console.log(body)\n        return body;\n    }\n\n    render() {\n        return (\n            <div>\n\n            </div>\n        );\n    }\n}\n\nexport default FetchCard;\n"]},"metadata":{},"sourceType":"module"}