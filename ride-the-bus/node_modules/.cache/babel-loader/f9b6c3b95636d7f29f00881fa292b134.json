{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rohan/Documents/RTB/ride-the-bus/src/components/FetchCard.js\";\nimport React, { Component } from 'react';\nimport Card from \"./Card\";\nimport AnswerSection from \"./AnswerSection\";\nimport { getColor, isHighOrLow, isInBetween, isInBetweenOrOutside } from \"./utils/CardHelper\";\n/**\n * This component handles the drawing a new card. It is responsible which step the user is on\n * As well as checking if their guess was correct.\n *\n * @param drawCard\n * @returns {JSX.Element}\n * @constructor\n */\n\nclass FetchCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDraw = async button => {\n      console.log(\"Drawing Card\");\n      this.fetchCard().then(res => this.setState({\n        loading: false,\n        cards: this.state.cards.concat(res.cards[0])\n      }, () => this.drawCallback(button))).catch(err => console.log(err + \"wassap kiddo u dun goofed\"));\n    };\n\n    this.fetchCard = async () => {\n      const url = `https://deckofcardsapi.com/api/deck/${this.props.deckId}/draw?count=1`;\n      const response = await fetch(url);\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n      /** Logs the response */\n\n\n      console.log(body);\n      return body;\n    };\n\n    this.state = {\n      step: 0,\n      loading: true,\n      cards: []\n    };\n    this.handleDraw = this.handleDraw.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.drawCallback = this.drawCallback.bind(this);\n    this.handleCorrect = this.handleCorrect.bind(this);\n    this.handleIncorrect = this.handleIncorrect.bind(this);\n  }\n\n  handleReset() {\n    this.setState({\n      step: 0,\n      loading: false,\n      cards: []\n    });\n  }\n\n  drawCallback(button) {\n    console.log(button);\n    const step = this.state.step;\n    const currCard = this.state.cards[step];\n\n    switch (this.state.step) {\n      case 0:\n        if (getColor(currCard.suit) === button) {\n          this.handleCorrect();\n        } else {\n          this.handleIncorrect();\n        }\n\n        break;\n\n      case 1:\n        if (isHighOrLow(currCard, this.state.cards[step - 1], button)) {\n          this.handleCorrect();\n        } else {\n          this.handleIncorrect();\n        }\n\n        break;\n\n      case 2:\n        if (isInBetweenOrOutside(this.state.cards, step, button)) {\n          this.handleCorrect();\n        } else {\n          this.handleIncorrect();\n        }\n\n        break;\n\n      case 3:\n        if (currCard.suit === button) {\n          this.handleCorrect();\n        } else {\n          this.handleIncorrect();\n        }\n\n        break;\n\n      default:\n    }\n  }\n\n  handleCorrect() {\n    this.setState({\n      step: this.state.step + 1\n    });\n  }\n\n  handleIncorrect() {\n    console.log(\"loser\");\n    this.setState({\n      step: -1\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'cards_box',\n        children: this.state.cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n          url: card.image,\n          children: card.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 76\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AnswerSection, {\n        step: this.state.step,\n        playHandler: this.handleDraw,\n        resetHandler: this.handleReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default FetchCard;","map":{"version":3,"sources":["/Users/rohan/Documents/RTB/ride-the-bus/src/components/FetchCard.js"],"names":["React","Component","Card","AnswerSection","getColor","isHighOrLow","isInBetween","isInBetweenOrOutside","FetchCard","constructor","props","handleDraw","button","console","log","fetchCard","then","res","setState","loading","cards","state","concat","drawCallback","catch","err","url","deckId","response","fetch","body","json","status","Error","message","step","bind","handleReset","handleCorrect","handleIncorrect","currCard","suit","render","map","card","image"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Card from \"./Card\";\nimport AnswerSection from \"./AnswerSection\";\nimport {getColor, isHighOrLow, isInBetween, isInBetweenOrOutside} from \"./utils/CardHelper\";\n\n/**\n * This component handles the drawing a new card. It is responsible which step the user is on\n * As well as checking if their guess was correct.\n *\n * @param drawCard\n * @returns {JSX.Element}\n * @constructor\n */\nclass FetchCard extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            step: 0,\n            loading: true,\n            cards: []\n        }\n        this.handleDraw = this.handleDraw.bind(this)\n        this.handleReset = this.handleReset.bind(this)\n        this.drawCallback = this.drawCallback.bind(this)\n        this.handleCorrect = this.handleCorrect.bind(this)\n        this.handleIncorrect = this.handleIncorrect.bind(this)\n    }\n\n    handleDraw = async (button) => {\n        console.log(\"Drawing Card\")\n        this.fetchCard()\n            .then(res => this.setState({\n                loading: false,\n                cards: this.state.cards.concat(res.cards[0])\n            }, () => this.drawCallback(button))).catch(err => console.log(err + \"wassap kiddo u dun goofed\"))\n    }\n    fetchCard = async () => {\n        const url = `https://deckofcardsapi.com/api/deck/${this.props.deckId}/draw?count=1`\n        const response = await fetch(url)\n        const body = await response.json()\n\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n\n        /** Logs the response */\n        console.log(body)\n        return body;\n    }\n\n    handleReset() {\n        this.setState({\n            step: 0,\n            loading: false,\n            cards: []\n        })\n    }\n\n    drawCallback(button) {\n        console.log(button)\n            const step = this.state.step\n            const currCard = this.state.cards[step]\n            switch (this.state.step) {\n                case 0:\n                    if (getColor(currCard.suit) === button) {\n                        this.handleCorrect()\n                    } else {\n                        this.handleIncorrect()\n                    }\n                    break;\n                case 1:\n                    if (isHighOrLow(currCard, this.state.cards[step - 1], button)) {\n                        this.handleCorrect()\n                    } else {\n                        this.handleIncorrect()\n                    }\n                    break;\n                case 2:\n                    if (isInBetweenOrOutside(this.state.cards, step, button)) {\n                        this.handleCorrect()\n                    } else {\n                        this.handleIncorrect()\n                    }\n\n                    break;\n                case 3:\n                    if (currCard.suit === button) {\n                        this.handleCorrect()\n                    } else {\n                        this.handleIncorrect()\n                    }\n                    break;\n                default:\n\n            }\n    }\n\n    handleCorrect() {\n        this.setState({\n            step: this.state.step + 1\n        })\n    }\n\n    handleIncorrect() {\n        console.log(\"loser\")\n        this.setState({\n            step: -1\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className={'cards_box'}>{this.state.cards.map(card => <Card url={card.image}>{card.image}</Card>)}</div>\n                <AnswerSection\n                    step={this.state.step}\n                    playHandler={this.handleDraw}\n                    resetHandler={this.handleReset}/>\n            </div>\n        );\n    }\n}\n\nexport default FetchCard;\n"]},"metadata":{},"sourceType":"module"}