{"ast":null,"code":"// Utility class to help with:\n// cards -> numerical value\n// Cards -> color\nexport function getColor(cardSuit) {\n  switch (cardSuit) {\n    case 'CLUBS':\n    case 'SPADES':\n      return 'black';\n\n    case 'DIAMONDS':\n    case 'HEARTS':\n      return 'red';\n\n    default:\n      return -1;\n  }\n}\nexport function isHighOrLow(currCard, prevCard, button) {\n  return button === 'high' && toNumValue(currCard.value) >= toNumValue(prevCard.value) || button === 'low' && toNumValue(currCard.value) <= toNumValue(prevCard.value);\n}\nexport function toNumValue(stringValue) {\n  if (stringValue === 'JACK') {\n    return 11;\n  }\n\n  if (stringValue === 'QUEEN') {\n    return 12;\n  }\n\n  if (stringValue === 'KING') {\n    return 13;\n  }\n\n  if (stringValue === 'ACE') {\n    return 1;\n  }\n\n  return stringValue;\n}\nexport function isInBetween(cardsList, step) {\n  const currCardVal = cardsList[step - 1].value;\n  const prevCardVal = cardsList[step - 2].value;\n  const twoPrevCardVal = cardsList[step - 3].value;\n}","map":{"version":3,"sources":["/Users/rohan/Documents/RTB/ride-the-bus/src/components/utils/CardHelper.js"],"names":["getColor","cardSuit","isHighOrLow","currCard","prevCard","button","toNumValue","value","stringValue","isInBetween","cardsList","step","currCardVal","prevCardVal","twoPrevCardVal"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,SAASA,QAAT,CAAkBC,QAAlB,EAA4B;AAC/B,UAAQA,QAAR;AACI,SAAK,OAAL;AACA,SAAK,QAAL;AACI,aAAO,OAAP;;AACJ,SAAK,UAAL;AACA,SAAK,QAAL;AACI,aAAO,KAAP;;AACJ;AACI,aAAO,CAAC,CAAR;AARR;AAUH;AAED,OAAO,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,QAA/B,EAAyCC,MAAzC,EAAiD;AACpD,SACKA,MAAM,KAAK,MAAX,IAAqBC,UAAU,CAACH,QAAQ,CAACI,KAAV,CAAV,IAA8BD,UAAU,CAACF,QAAQ,CAACG,KAAV,CAA9D,IACCF,MAAM,KAAK,KAAX,IAAoBC,UAAU,CAACH,QAAQ,CAACI,KAAV,CAAV,IAA8BD,UAAU,CAACF,QAAQ,CAACG,KAAV,CAFjE;AAIH;AAED,OAAO,SAASD,UAAT,CAAoBE,WAApB,EAAiC;AACpC,MAAIA,WAAW,KAAK,MAApB,EAA4B;AAAC,WAAO,EAAP;AAAU;;AACvC,MAAIA,WAAW,KAAK,OAApB,EAA6B;AAAC,WAAO,EAAP;AAAU;;AACxC,MAAIA,WAAW,KAAK,MAApB,EAA4B;AAAC,WAAO,EAAP;AAAU;;AACvC,MAAIA,WAAW,KAAK,KAApB,EAA2B;AAAC,WAAO,CAAP;AAAS;;AACrC,SAAOA,WAAP;AACH;AAED,OAAO,SAASC,WAAT,CAAqBC,SAArB,EAAgCC,IAAhC,EAAsC;AACzC,QAAMC,WAAW,GAAGF,SAAS,CAACC,IAAI,GAAG,CAAR,CAAT,CAAoBJ,KAAxC;AACA,QAAMM,WAAW,GAAGH,SAAS,CAACC,IAAI,GAAG,CAAR,CAAT,CAAoBJ,KAAxC;AACA,QAAMO,cAAc,GAAGJ,SAAS,CAACC,IAAI,GAAG,CAAR,CAAT,CAAoBJ,KAA3C;AACH","sourcesContent":["// Utility class to help with:\n// cards -> numerical value\n// Cards -> color\nexport function getColor(cardSuit) {\n    switch (cardSuit) {\n        case 'CLUBS':\n        case 'SPADES':\n            return 'black'\n        case 'DIAMONDS':\n        case 'HEARTS':\n            return 'red'\n        default:\n            return -1\n    }\n}\n\nexport function isHighOrLow(currCard, prevCard, button) {\n    return (\n        (button === 'high' && toNumValue(currCard.value) >= toNumValue(prevCard.value)) ||\n        (button === 'low' && toNumValue(currCard.value) <= toNumValue(prevCard.value))\n    )\n}\n\nexport function toNumValue(stringValue) {\n    if (stringValue === 'JACK') {return 11}\n    if (stringValue === 'QUEEN') {return 12}\n    if (stringValue === 'KING') {return 13}\n    if (stringValue === 'ACE') {return 1}\n    return stringValue\n}\n\nexport function isInBetween(cardsList, step) {\n    const currCardVal = cardsList[step - 1].value\n    const prevCardVal = cardsList[step - 2].value\n    const twoPrevCardVal = cardsList[step - 3].value\n}\n"]},"metadata":{},"sourceType":"module"}